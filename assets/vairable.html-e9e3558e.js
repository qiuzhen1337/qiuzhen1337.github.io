import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as u,c as r,b as o,w as a,a as l,d as n,e as s}from"./app-1bf65c41.js";const d="/assets/image-20230913083608030-48396e78.png",k={},m=l('<p>你好，我是仇真。</p><h2 id="_1-理解变量" tabindex="-1"><a class="header-anchor" href="#_1-理解变量" aria-hidden="true">#</a> 1. 理解变量</h2><h3 id="_1-1-从字面意思去理解" tabindex="-1"><a class="header-anchor" href="#_1-1-从字面意思去理解" aria-hidden="true">#</a> 1.1 从字面意思去理解</h3><p>变量—变化的数量/大小</p><h3 id="_1-2-形象的比喻" tabindex="-1"><a class="header-anchor" href="#_1-2-形象的比喻" aria-hidden="true">#</a> 1.2 形象的比喻</h3><p>在计算机内存中开辟一个可以放东西的空间，如信封、冰箱……</p><h3 id="_1-3-举个例子" tabindex="-1"><a class="header-anchor" href="#_1-3-举个例子" aria-hidden="true">#</a> 1.3 举个例子</h3><p>假如，你是班级当中的课代表，每个月需要统计班级中每个学生的月考成绩。月考成绩会每个月一张纸，每张纸上都会依次记录每个学生的成绩月考成绩，例如：</p><ol><li>李雷 98分</li><li>马冬梅 89分</li><li>刘奕彤 96分</li><li>......</li></ol><p>某一天，老师要看刘奕彤 1月、2月、3月的成绩，这个时候作为课代表的你需要怎么办。——总不能直接把每个月的月考成绩单直接给老师，显然是不合适的。</p><p>我们应该把刘奕彤 1月、2月、3月的成绩抄写到单独的一张纸上，接着给老师。</p><p>那么，我们为什么不一开始直接为每一个学生分配一个信封呢？（也可以是档案袋）信封在一开始是扁的，当我们放东西（数据）进去之后，是不是鼓起来了？——是不是变化了？是不是有大小了呢？显然是的。</p><p>那么信封，是不是在我们当前所处的空间当中开辟空间，来存放数据并且说这是信封。</p><p>类似的有：冰箱，不也是在我们当前所处的空间中，开辟空间。</p><p>——所以，变量不就是在计算机的内存当中开辟空间，来存储数据。</p><h3 id="_1-4-变量会被覆盖" tabindex="-1"><a class="header-anchor" href="#_1-4-变量会被覆盖" aria-hidden="true">#</a> 1.4 变量会被覆盖</h3><p>空间中只有一个位置，只能把数据叠放，所以最终显示出的是最后赋予的值。</p><h2 id="_2-如何创建变量—赋值语句" tabindex="-1"><a class="header-anchor" href="#_2-如何创建变量—赋值语句" aria-hidden="true">#</a> 2. 如何创建变量—赋值语句</h2><h3 id="_2-1-变量" tabindex="-1"><a class="header-anchor" href="#_2-1-变量" aria-hidden="true">#</a> 2.1 变量</h3><p>通过变量名代表或引用某个值</p><h3 id="_2-2-初始化赋值语句" tabindex="-1"><a class="header-anchor" href="#_2-2-初始化赋值语句" aria-hidden="true">#</a> 2.2 初始化赋值语句</h3><p>变量名 = 表达式</p><p>注意：“=”为赋值运算符，并不是相等，而是赋值。举例：x=3</p><p>程序的运行逻辑：先从上到下，再从右到左，最后才是赋值（先一行行运算，再运算右边，最后赋值给左边）</p>',24),v=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
x `),n("span",{class:"token operator"},"="),s(" x "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"# print 打印输出"),s(`
`),n("span",{class:"token comment"},"# 井号是注释作用：我们看得见，计算机看不算，属于代码的注解、说明"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("name1 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"lilei"'),s(`
name2 `),n("span",{class:"token operator"},"="),s(" name1 "),n("span",{class:"token comment"},"# 变量值的传递"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("name2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"# 注释快捷键：Command + /"),s(`

name1 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"lilei"'),s(`
name1 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"qiuzhen"'),s(),n("span",{class:"token comment"},"# 变量值的覆盖"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("name1"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
lilei
qiuzhen
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=l(`<h2 id="_3-探究print" tabindex="-1"><a class="header-anchor" href="#_3-探究print" aria-hidden="true">#</a> 3. 探究print</h2><h3 id="_3-1-同时输出多个数据" tabindex="-1"><a class="header-anchor" href="#_3-1-同时输出多个数据" aria-hidden="true">#</a> 3.1 同时输出多个数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment"># print 同时输出多个变量，默认以空格间隔</span>

<span class="token comment"># output</span>
<span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认以空格间隔，可以使用sep修改。</p><h3 id="_3-2-sep-修改多个变量同时输出的间隔" tabindex="-1"><a class="header-anchor" href="#_3-2-sep-修改多个变量同时输出的间隔" aria-hidden="true">#</a> 3.2 sep 修改多个变量同时输出的间隔</h3>`,5),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},","),s(" c"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# print 同时输出多个变量，默认以空格间隔"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},","),s(" c"),n("span",{class:"token punctuation"},","),s(" sep"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 双引号里是什么就以什么间隔"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
`),n("span",{class:"token number"},"1"),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token number"},"111"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" b"),n("span",{class:"token punctuation"},","),s(" c"),n("span",{class:"token punctuation"},","),s(" sep"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"xdsnqlo"'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
1xdsnqlo1xdsnqlo1
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("h3",{id:"_3-3-end-修改-print-输出结尾的方式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-3-end-修改-print-输出结尾的方式","aria-hidden":"true"},"#"),s(" 3.3 end 修改 print 输出结尾的方式")],-1),A=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
b `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
c `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 默认以换行结尾"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
`),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token number"},"1"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
b `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
c `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"\\n\\n\\n"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# \\n 代表一次换行"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s("end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"xsolanqxaojsc"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("c"),n("span",{class:"token punctuation"},","),s("end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'","'),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
`),n("span",{class:"token number"},"1"),s(`


1xsolanqxaojsc1`),n("span",{class:"token punctuation"},","),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=l(`<h3 id="_3-4-end-和-sep-可以同时使用" tabindex="-1"><a class="header-anchor" href="#_3-4-end-和-sep-可以同时使用" aria-hidden="true">#</a> 3.4 end 和 sep 可以同时使用</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;love qz&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;love qz&quot;</span><span class="token punctuation">)</span> <span class="token comment"># end 只会针对此 print</span>

<span class="token comment"># output</span>
<span class="token number">1</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>1love qz1 <span class="token number">1</span> <span class="token number">1</span>
<span class="token number">111</span>
<span class="token number">1</span> <span class="token number">1</span> 1love qz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="变量专项练习-例题-1-交换果汁" tabindex="-1"><a class="header-anchor" href="#变量专项练习-例题-1-交换果汁" aria-hidden="true">#</a> 变量专项练习 例题 1 交换果汁</h3><p>假如你有两个小孩，哥哥叫：Austin，弟弟叫：Jaden。</p><p>Austin 想喝<strong>果汁</strong>，Jaden 想喝<strong>可乐</strong>。<strong>哥哥和弟弟都有专属的杯子，不喜欢用对方的杯子。</strong></p><p>家中仅剩一杯果汁、一杯可乐，你不小心把哥哥的杯子装了可乐，弟弟的杯子装了果汁。</p><p><strong>问：如何交换哥哥与弟弟杯中的果汁？</strong></p>`,7),q=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("Austin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Coke"'),s("  "),n("span",{class:"token comment"},"# 该赋值可以理解为倒果汁的过程"),s(`
Jaden `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"juice"'),s("  "),n("span",{class:"token comment"},"# 该赋值可以理解为倒果汁的过程"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Austin"'),n("span",{class:"token punctuation"},","),s(" Austin"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Jaden"'),n("span",{class:"token punctuation"},","),s(" Jaden"),n("span",{class:"token punctuation"},")"),s(`
cup1 `),n("span",{class:"token operator"},"="),s(" Jaden     "),n("span",{class:"token comment"},"# 答案 #注意：在没有新饮料的情况下，要交换饮料，而不是重新到两杯"),s(`
Jaden `),n("span",{class:"token operator"},"="),s(" Austin   "),n("span",{class:"token comment"},"# 答案 #思路：必须有一个新容器来存放其中一种饮料，一个杯子空了之后就可以换入对的饮料，再把空杯子内的饮料倒入另一个杯子"),s(`
Austin `),n("span",{class:"token operator"},"="),s(" cup1    "),n("span",{class:"token comment"},"# 答案"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Austin"'),n("span",{class:"token punctuation"},","),s(" Austin"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Jaden"'),n("span",{class:"token punctuation"},","),s(" Jaden"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
Austin Coke
Jaden juice
Austin juice
Jaden Coke
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("Austin "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"Coke"'),s("  "),n("span",{class:"token comment"},"# 该赋值可以理解为倒果汁的过程"),s(`
Jaden `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"juice"'),s("  "),n("span",{class:"token comment"},"# 该赋值可以理解为倒果汁的过程"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Austin"'),n("span",{class:"token punctuation"},","),s(" Austin"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Jaden"'),n("span",{class:"token punctuation"},","),s(" Jaden"),n("span",{class:"token punctuation"},")"),s(`
Austin`),n("span",{class:"token punctuation"},","),s("Jaden "),n("span",{class:"token operator"},"="),s(" Jaden"),n("span",{class:"token punctuation"},","),s("Austin  "),n("span",{class:"token comment"},"# 答案 "),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Austin"'),n("span",{class:"token punctuation"},","),s(" Austin"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Jaden"'),n("span",{class:"token punctuation"},","),s(" Jaden"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# output"),s(`
Austin Coke
Jaden juice
Austin juice
Jaden Coke
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=l(`<h3 id="例题-2-创建变量并输出" tabindex="-1"><a class="header-anchor" href="#例题-2-创建变量并输出" aria-hidden="true">#</a> 例题 2 创建变量并输出</h3><ol><li>输出效果：</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Austin Jaden Alex Cava
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>输出效果如下：</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Austin$Jaden$Alex$Cava<span class="token operator">%</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token operator">=</span><span class="token string">&quot;Austin&quot;</span>
b<span class="token operator">=</span><span class="token string">&quot;Jaden&quot;</span>
c<span class="token operator">=</span><span class="token string">&quot;Alex&quot;</span>
d<span class="token operator">=</span><span class="token string">&quot;Cava&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Austin Jaden Alex Cava
Austin$Jaden$Alex$Cava<span class="token operator">%</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-变量命名规则" tabindex="-1"><a class="header-anchor" href="#_3-5-变量命名规则" aria-hidden="true">#</a> 3.5 变量命名规则</h3><ul><li><p>大小写英文、数字和<code>_</code>的结合，且不能用数字开头；</p></li><li><p>系统关键词不能做变量名使用； 获取关键字列表：help(‘keywords’)</p></li><li><p>python中的变量名区分大小写；</p></li><li><p>变量名不能包含空格，但可以使用下划线来分隔其中的单词；</p></li><li><p>不要使用python的内置函数名称做变量名；</p><figure><img src="`+d+'" alt="image-20230913083608030" tabindex="0" loading="lazy"><figcaption>image-20230913083608030</figcaption></figure></li></ul>',8),J=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("n "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"A"'),s(`
N `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"a"'),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 如果不区分大小写的话，输出什么结果？---a"),s(`
`),n("span",{class:"token comment"},"# 但是，它区分大小写，所以输出 A"),s(`

`),n("span",{class:"token comment"},"# out"),s(`
A
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 数字不能开头"),s(`
a121iy212c21 `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"a"'),s(),n("span",{class:"token comment"},"# 数字不能开头，除了开头，其他都可以"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("user_name "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"aiyc"'),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"print"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"aiyc"'),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# 内置函数名不能当做变量名"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 关键词不能当做变量名"),s(`
`),n("span",{class:"token keyword"},"await"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"aiyc"'),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"# await 在 Python 当中有特殊功能，比如 while"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function V(B,T){const i=p("CodeTabs");return u(),r("div",null,[m,o(i,{id:"91",data:[{id:"demo1"},{id:"demo2"}]},{title0:a(({value:e,isActive:t})=>[s("demo1")]),title1:a(({value:e,isActive:t})=>[s("demo2")]),tab0:a(({value:e,isActive:t})=>[v]),tab1:a(({value:e,isActive:t})=>[b]),_:1}),h,o(i,{id:"112",data:[{id:"demo1"},{id:"demo2"}]},{title0:a(({value:e,isActive:t})=>[s("demo1")]),title1:a(({value:e,isActive:t})=>[s("demo2")]),tab0:a(({value:e,isActive:t})=>[g]),tab1:a(({value:e,isActive:t})=>[y]),_:1}),_,o(i,{id:"123",data:[{id:"原本"},{id:"1"}]},{title0:a(({value:e,isActive:t})=>[s("原本")]),title1:a(({value:e,isActive:t})=>[s("1")]),tab0:a(({value:e,isActive:t})=>[A]),tab1:a(({value:e,isActive:t})=>[x]),_:1}),w,o(i,{id:"150",data:[{id:"通用"},{id:"python专属"}]},{title0:a(({value:e,isActive:t})=>[s("通用")]),title1:a(({value:e,isActive:t})=>[s("python专属")]),tab0:a(({value:e,isActive:t})=>[q]),tab1:a(({value:e,isActive:t})=>[f]),_:1}),C,o(i,{id:"211",data:[{id:"Code1"},{id:"Code2"},{id:"Code3"},{id:"Code4"},{id:"Code5"}]},{title0:a(({value:e,isActive:t})=>[s("Code1")]),title1:a(({value:e,isActive:t})=>[s("Code2")]),title2:a(({value:e,isActive:t})=>[s("Code3")]),title3:a(({value:e,isActive:t})=>[s("Code4")]),title4:a(({value:e,isActive:t})=>[s("Code5")]),tab0:a(({value:e,isActive:t})=>[J]),tab1:a(({value:e,isActive:t})=>[j]),tab2:a(({value:e,isActive:t})=>[z]),tab3:a(({value:e,isActive:t})=>[$]),tab4:a(({value:e,isActive:t})=>[N]),_:1})])}const S=c(k,[["render",V],["__file","vairable.html.vue"]]);export{S as default};
